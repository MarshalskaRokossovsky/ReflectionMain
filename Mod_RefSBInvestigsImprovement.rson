{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -683,
  "ViewPos.y":  -635,
  "ScriptName":  "Mod_RefSBInvestigsImprovement",
  "ScriptFileOut":  "C:\\Users\\DmitB\\Фиксы\\Reflection Fixes\\Mods\\Reflection\\RefSBInvestigsImprovement\\DATA\\Script\\Mod_RefSBInvestigsImprovement.scr",
  "ScriptTextOut":  "C:\\Users\\DmitB\\Фиксы\\Reflection Fixes\\Mods\\Reflection\\RefSBInvestigsImprovement\\DATA\\Script\\Mod_RefSBInvestigsImprovement.txt",
  "GraphPoint.Count":  34,
  "GraphLink.Count":  4,
  "GraphRectText.Count":  0,
  "Variables.Count":  26,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  3,
  "Statements.Count":  0,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "GroupNew",
          "Pos.x":  -100,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  4,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  212,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(!DomiksDefeated() && !CoalitionDefeated()) {",
              "    int rnd; //Иллюзия сдачи рейнджерами ошмётков",
              "    int t1, t2, t3; //временные для новости",
              "    str temp_str;",
              "    cdRangers = round(2 * GalaxyDiffLevels() / 5);",
              "    if(LilRND == 0 && SBcnt) {",
              "        rnd = Rnd(1,3);",
              "        if(rnd == 1) GalaxyDominatorResearchMaterial(0,GalaxyDominatorResearchMaterial(0) + Rnd(1,35));",
              "        if(rnd == 2) GalaxyDominatorResearchMaterial(1,GalaxyDominatorResearchMaterial(1) + Rnd(1,35));",
              "        if(rnd == 3) GalaxyDominatorResearchMaterial(2,GalaxyDominatorResearchMaterial(2) + Rnd(1,35));",
              "        LilRND = Rnd(cdRangers,cdRangers + 15);",
              "    }",
              "    //Ивент о стахановской сдаче ошмётков",
              "    if(GrRND == 0 && SBcnt) {",
              "        rnd = Rnd(1,3);",
              "        t1 = Rnd(65,215);",
              "        t2 = Rnd(1,10); //В основном сдают на одну серию, но никто же не мешал по пути собрать ещё по мелочи барахла, верно?",
              "        t3 = Rnd(2,7);",
              "        if(rnd == 1) {",
              "            GalaxyDominatorResearchMaterial(0,GalaxyDominatorResearchMaterial(0) + t1);",
              "            GalaxyDominatorResearchMaterial(1,GalaxyDominatorResearchMaterial(1) + t2);",
              "            GalaxyDominatorResearchMaterial(2,GalaxyDominatorResearchMaterial(2) + t3);",
              "        }",
              "        if(rnd == 2) {",
              "            GalaxyDominatorResearchMaterial(0,GalaxyDominatorResearchMaterial(0) + t2);",
              "            GalaxyDominatorResearchMaterial(1,GalaxyDominatorResearchMaterial(1) + t1);",
              "            GalaxyDominatorResearchMaterial(2,GalaxyDominatorResearchMaterial(2) + t3);",
              "        }",
              "        if(rnd == 3) {",
              "            GalaxyDominatorResearchMaterial(0,GalaxyDominatorResearchMaterial(0) + t3);",
              "            GalaxyDominatorResearchMaterial(1,GalaxyDominatorResearchMaterial(1) + t2);",
              "            GalaxyDominatorResearchMaterial(2,GalaxyDominatorResearchMaterial(2) + t1);",
              "        }",
              "        t1 = t1 + t2 + t3;",
              "        NewsAdd(Format('Сегодня знаменательное событие в деле исследования доминаторов - рейнджерский корпус в очередной раз доказал свою эффективность и передал сети научных баз колоссальных объём материала для исследований - целых cnt тонн различных доминаторских обломков. Это очень сильно поможет делу исследования причины появления доминаторов!','cnt',t1));",
              "        AddPlanetNews(Format('Сегодня знаменательное событие в деле исследования доминаторов - рейнджерский корпус в очередной раз доказал свою эффективность и передал сети научных баз колоссальных объём материала для исследований - целых cnt тонн различных доминаторских обломков. Это очень сильно поможет делу исследования причины появления доминаторов!', 'cnt',t1));",
              "        GrRND = Rnd(290 + round(GalaxyDiffLevels() / 7),520 + round(GalaxyDiffLevels() / 10));",
              "    }",
              "    //Ивенты \"прорывов\" и \"откатов\"",
              "    if(ForwardsRND == 0 && SBcnt) {",
              "        if(Etap == 0) {",
              "            if(Rnd(1,3) == 3) {",
              "                GalaxyDominatorResearchPercent(2,GalaxyDominatorResearchPercent(2) - 1);",
              "                AddPlanetNews('Продолжающиеся исследования доминаторской угрозы - важное направление научной деятельности Коалиции в данный момент. Поэтому для него открыты доступы ко всем архивам, включая, конечно же, старые программы и коды модульных роботов разных рас. По итогу сравнения элементов программного обеспечения доминаторов с наличными материалами научный коллектив пришёл к неутешительному выводу - мы недооценили доминаторов, которые сильно переработали наши программы воспроизводства.');",
              "            }",
              "            else {",
              "                GalaxyDominatorResearchPercent(2,GalaxyDominatorResearchPercent(2) + GalaxyDominatorResearchPercent(2) * 0.15 + 1);",
              "                AddPlanetNews('Продолжающиеся исследования доминаторской угрозы - важное направление научной деятельности Коалиции в данный момент. Поэтому для него открыты доступы ко всем архивам, включая, конечно же, старые программы и коды модульных роботов разных рас. Гениальная догадка о совмещении алгоритмов производства органелл клисан и оформления этого по разделам как у модульных роботов дало прорыв в расшифровке кодов терроноидов. Как оказалось, в их программах обеспечение воспроизводства собственного вида имеет наивысший приоритет - подчас выше самозащиты. Научные коллективы Галактики выясняют причины таких директив.');",
              "            }",
              "            Etap = 1;",
              "            ForwardsRND = Rnd(680+round(GalaxyDiffLevels()),1120+round(GalaxyDiffLevels() / 2));",
              "        }",
              "        if(Etap == 1) {",
              "            if(Rnd(1,4) == 4) {",
              "                GalaxyDominatorResearchPercent(0,GalaxyDominatorResearchPercent(0) * 0.75);",
              "                AddPlanetNews('Раз за разом учёные Коалиции совершают невозможное, с нуля осваивая язык и образ мышления наших злейших смертных врагов - доминаторов. Естественно, одним из важнейших для нас элементов деятельности доминаторов является их агрессия против враждебных элементов. Увы, наши научные коллективы столкнулись с алгоритмами, по результатам тактического и стратегического анализа признанными дестркутивными. Передовые научные коллективы были брошены на повторный анализ данных.');",
              "            }",
              "            else {",
              "                GalaxyDominatorResearchPercent(0,GalaxyDominatorResearchPercent(0) + GalaxyDominatorResearchPercent(0) * 0.35 + 1);",
              "                AddPlanetNews('Раз за разом учёные Коалиции совершают невозможное, с нуля осваивая язык и образ мышления наших злейших смертных врагов - доминаторов. Естественно, одним из важнейших для нас элементов деятельности доминаторов является их агрессия против враждебных элементов. Однако действовать приходится очень неординарно - так, новый прорыв в сфере изучения военного дела доминаторов потребовал переосмысления всей их деятельности. Казавшиеся ранее деструктивными директивы на столкновение модулей с противником при имеющейся возможности нанести урон обычным оружием нашёл отклики в алгоритмах воспроизводства и экспансии блазероидов. Передовые научные мощности уже получают результаты этого прорывного исследования в свои руки.');",
              "            }",
              "            Etap = 2;",
              "            ForwardsRND = Rnd(250+round(GalaxyDiffLevels()),1020+round(GalaxyDiffLevels() / 2));",
              "        }",
              "        if(Etap == 2) {",
              "            if(Rnd(1,4) == 4) {",
              "                GalaxyDominatorResearchPercent(1,GalaxyDominatorResearchPercent(1) - Rnd(3,4));",
              "                AddPlanetNews('Изучение, анализ, обобщение данных - деятельность, ярко выделяющая Разумные Расы среди остальной флоры и фауны Галактики. Между тем и наши злейшие враги не должны быть оставлены в стороне. В программы модульных роботов изначально были внедрены элементы исследования окружающец среды и анализа её пригодности для ведения боевых действий теми или иными типами вооружения. На данный же момент мы можем только поражаться объёмами информации, накопленной, например, одним келлероидным Эквентором - используя свои радиолокационные системы, он за месяц накапливает информацию, вырабатываемую в том же объёме годом деятельности примерно ста миллионов гуманоидов. Отдел по изучению Келлера запросил дополнительное финансирование для изучения этого вопроса.');",
              "            }",
              "            else {",
              "                GalaxyDominatorResearchPercent(1,GalaxyDominatorResearchPercent(1) + (GalaxyDominatorResearchPercent() * 0.15) + 1);",
              "                AddPlanetNews('Изучение, анализ, обобщение данных - деятельность, ярко выделяющая Разумные Расы среди остальной флоры и фауны Галактики. Между тем и наши злейшие враги не должны быть оставлены в стороне. В программы модульных роботов изначально были внедрены элементы исследования окружающец среды и анализа её пригодности для ведения боевых действий теми или иными типами вооружения. Каково же было удивление учёных, когда, разблокировав один из вспомогательных блоков памяти келлероидного эквентора, они обнаружили в нём решение нескольких парадоксов и феноменов физики, поставивших в тупик лучшие умы и развитие науки несколько лет назад. Остаётся только гадать, какая информация находится в банках самого Келлера, и как его модули ещё не стёрли Коалицию в порошок.');",
              "            }",
              "            Etap = 3;",
              "            ForwardsRND = Rnd(450+round(GalaxyDiffLevels()),720+round(GalaxyDiffLevels() / 2));",
              "        }",
              "        if(Etap == 3) {",
              "            if(Rnd(1,5) == 5) {",
              "                GalaxyDominatorResearchPercent(0,GalaxyDominatorResearchPercent(0) - Rnd(1,2));",
              "                GalaxyDominatorResearchPercent(1,GalaxyDominatorResearchPercent(1) - Rnd(3,6));",
              "                GalaxyDominatorResearchPercent(2,GalaxyDominatorResearchPercent(2) - Rnd(2,3));",
              "                AddPlanetNews('В ходе исследований природы доминаторов было октрыто два противоположных направления исследований. Первое основывается на общности признаков доминаторов как продукта синтеза клисанской протоплазмы и модульных роботов под действием крайне неблагоприятных внешних условий. Второе рассматривает доминаторов каждой серии как разные виды, имеющие общих предков, а поэтому концентрируется на исследовании различий в поведении и системе приказов и директив. Недавний консиллиум ведущих специалистов в области исследования доминаторской угрозы принял решение сконцентрироваться на общности признаков каждой серии, что позволит найти общий ключ для каждого из направлений.');",
              "            }",
              "            else {",
              "                GalaxyDominatorResearchPercent(0,GalaxyDominatorResearchPercent(0) + Rnd(1,2) + GalaxyDominatorResearchPercent() * 0.10);",
              "                GalaxyDominatorResearchPercent(1,GalaxyDominatorResearchPercent(1) + Rnd(3,6) + GalaxyDominatorResearchPercent() * 0.10);",
              "                GalaxyDominatorResearchPercent(2,GalaxyDominatorResearchPercent(2) + Rnd(2,3) + GalaxyDominatorResearchPercent() * 0.10);",
              "                AddPlanetNews('В ходе исследований природы доминаторов было октрыто два противоположных направления исследований. Первое основывается на общности признаков доминаторов как продукта синтеза клисанской протоплазмы и модульных роботов под действием крайне неблагоприятных внешних условий. Второе рассматривает доминаторов каждой серии как разные виды, имеющие общих предков, а поэтому концентрируется на исследовании различий в поведении и системе приказов и директив. Недавний консиллиум ведущих специалистов в области исследования доминаторской угрозы принял решение более плотно заняться исследованием различий каждой серии, чтобы разработать свой, уникальный подход к кааждому врагу.');",
              "            }",
              "            Etap = 4;",
              "            ForwardsRND = Rnd(350+round(GalaxyDiffLevels()),620+round(GalaxyDiffLevels() / 2));",
              "        }",
              "        if(Etap > 3) {",
              "            if(GalaxyDominatorResearchPercent(0) > 80 && Etap != 5 && Etap != 7 && Etap != 9 && Etap != 11) {",
              "                Etap = Etap + 1;",
              "                if(Rnd(1,3) == 3) {",
              "                    GalaxyDominatorResearchPercent(0,GalaxyDominatorResearchPercent(0) + 5);",
              "                    AddPlanetNews('Исследователи самых разных мастей уже довольно долгое время работают над проблематикой доминаторской угрозы. Раз за разом они подбирались всё ближе к постижению целей доминаторов. И сейчас они могут чётко заявить - целью Блазера является Война. Война как таковая, война на уничтожение, война ради того, чтобы устранить любую угрозу. Доведённая до абсурда программа самозащиты и ведения боевых действий модульного робота стала программой уничтожения всего живого.');",
              "                }",
              "            }",
              "            if(GalaxyDominatorResearchPercent(1) > 80 && Etap != 10 && Etap != 7 && Etap != 6 && Etap != 11) {",
              "                Etap = Etap + 2;",
              "                if(Rnd(1,3) == 3) {",
              "                    GalaxyDominatorResearchPercent(1,GalaxyDominatorResearchPercent(1) + 5);",
              "                    AddPlanetNews('Самый странный из доминаторских вождей - Келлер. Его манипуляции с гиперпространством давно привлекали исследователей. Вместе с тем Келлер оказывался весьма могущественным противником, правда, в сфере ведения войны уступая другим боссам. Причина этого оказалась простой - цель Келлера в исследовании. Программа исследования окружающей среды для выяснения условий поля боя оказалась гипертрофирована и создала беспринципного, холодного, но сверхэффективного учёного, который готов на всё ради получения новой информации.');",
              "                }",
              "            }",
              "            if(GalaxyDominatorResearchPercent(2) > 80 && Etap != 10 && Etap != 8 && Etap != 9 && Etap != 11) {",
              "                Etap = Etap + 4;",
              "                if(Rnd(1,3) == 3) {",
              "                    GalaxyDominatorResearchPercent(2,GalaxyDominatorResearchPercent(2) + 5);",
              "                    AddPlanetNews('Согласно донесениям разведки, Террон почти сразу после Гралгарской бойни воспользовался отступлением Блазера и занял эту систему, захватив планету-родину доминаторов. Необычного поведение и преобладание директив воспроизводства сильно заинтересовали исследователей. Причина всего этого довольно проста - целью Террона является переработка всей материи в представителей своего собственного вида. Учёные опасасаются, что будет, если в руки Террона попадут более продвинутые технологии по переработке органических веществ, а также информация о принципах масштабного ресинтезирования.');",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Дополнительное ускорение исследований большим количеством научек (разработка завершена!)",
              "    if(ArrayDim(KellerArr) <= 4 && ArrayDim(BlazerArr) <= 4 && ArrayDim(TerronArr) <= 4) {",
              "        if(GalaxyShipId()>lastShipId) {",
              "            tdwd=BuildListOfNewShips(tempArr,lastShipId,1+2+4+8+16+256+4096+8192,1+2+4+8+16+128,1,'');",
              "            if(tdwd) {    //Если найден хотя бы один корабль",
              "                for(i=0;i<ArrayDim(tempArr);i=i+1) {",
              "                    tdwd=0;    //Обнуляем флаг",
              "                    tShip=tempArr[i];    //Выбираем корабль",
              "                    if(IsPlayer(tShip)) continue;",
              "                    tStr=ShipType(tShip);",
              "                    if(tStr=='SB') {",
              "                        SBcnt = SBcnt + 1;",
              "                        rnd = Rnd(1,3);",
              "                        if(rnd == 1) {",
              "                            ArrayAdd(KellerArr,Id(tempArr[i]));",
              "                            AddPlanetNews('Недавно построенная база '+Name(tShip)+' будет сконцентрирована на исследовании келлероидов, как сообщает пресс-служба Сети Научных баз');",
              "                        }",
              "                        if(rnd == 2) {",
              "                            ArrayAdd(BlazerArr,Id(tempArr[i]));",
              "                            AddPlanetNews('Недавно построенная база '+Name(tShip)+' будет сконцентрирована на исследовании блазероидов, как сообщает пресс-служба Сети Научных баз');",
              "                        }",
              "                        if(rnd == 3) {",
              "                            ArrayAdd(TerronArr,Id(tempArr[i]));",
              "                            AddPlanetNews('Недавно построенная база '+Name(tShip)+' будет сконцентрирована на исследовании терроноидов, как сообщает пресс-служба Сети Научных баз');",
              "                        }",
              "                    }",
              "                }",
              "            }",
              "            lastShipId=GalaxyShipId();    //Обновляем Id последнего рожденного корабля",
              "        }",
              "    }",
              "    if(!ShipIsTakeoff(Player())) {",
              "        for(i=GalaxyEvents()-1; i>=0; i=i-1) {",
              "            if(GalaxyEventDate(i) < CurTurn()) break;",
              "            if(GalaxyEventType(i)=='RuinsDestroyed') { //Какую-то станцию уронили, идём проверять, какую",
              "                if(GalaxyEventData(0) == 9) {",
              "                    SBcnt = SBcnt - 1;",
              "                    for(j=0;j<ArrayDim(TerronArr);j=j+1) {",
              "                        if(TerronArr[j] == GalaxyEventData(1)) ArrayDelete(TerronArr,j);",
              "                    }",
              "                    for(j=0;j<ArrayDim(KellerArr);j=j+1) {",
              "                        if(KellerArr[j] == GalaxyEventData(1)) ArrayDelete(KellerArr,j);",
              "                    }",
              "                    for(j=0;j<ArrayDim(BlazerArr);j=j+1) {",
              "                        if(BlazerArr[j] == GalaxyEventData(1)) ArrayDelete(BlazerArr,j);",
              "                    }",
              "                    //Если уронили станцию из какого-то из наших списков - удаляем её оттудова",
              "                }",
              "            }",
              "        }",
              "    }",
              "    //Здесь мы будем считать средний прирост исследования домиков посредством пачки массивов",
              "    ArrayAdd(KellerInv,GalaxyDominatorResearchPercent(1) - KellerFl);",
              "    ArrayAdd(BlazerInv,GalaxyDominatorResearchPercent(0) - BlazerFl);",
              "    ArrayAdd(TerronInv,GalaxyDominatorResearchPercent(2) - TerronFl);",
              "    if(ArrayDim(KellerInv) > 10) ArrayDelete(KellerInv,1);",
              "    if(ArrayDim(BlazerInv) > 10) ArrayDelete(BlazerInv,1);",
              "    if(ArrayDim(TerronInv) > 10) ArrayDelete(TerronInv,1);",
              "    //А теперь наконец-то прибавляем процент исследования",
              "    if(CurTurn() > 320) {",
              "        if(ArrayDim(KellerArr) > 0 && GalaxyDominatorResearchPercent(1) < 100) {",
              "            tfloat = KellerInv[9] - KellerInv[1];",
              "            tfloat = tfloat / 9;",
              "            if(ArrayDim(KellerArr) > 1) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(KellerArr) > 2) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(KellerArr) > 3) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(KellerArr) > 4) tfloat = tfloat * 110 / 100;",
              "            KellerFl = KellerFl + tfloat;",
              "            GalaxyDominatorResearchPercent(1,GalaxyDominatorResearchPercent(1)+tfloat);",
              "        }",
              "        if(ArrayDim(BlazerArr) > 0 && GalaxyDominatorResearchPercent(0) < 100) {",
              "            tfloat = BlazerInv[9] - BlazerInv[1];",
              "            tfloat = tfloat / 9;",
              "            if(ArrayDim(BlazerArr) > 1) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(BlazerArr) > 2) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(BlazerArr) > 3) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(BlazerArr) > 4) tfloat = tfloat * 110 / 100;",
              "            BlazerFl = BlazerFl + tfloat;",
              "            GalaxyDominatorResearchPercent(0,GalaxyDominatorResearchPercent(0)+tfloat);",
              "        }",
              "        if(ArrayDim(TerronArr) > 0 && GalaxyDominatorResearchPercent(2) < 100) {",
              "            tfloat = TerronInv[9] - TerronInv[1];",
              "            tfloat = tfloat / 9;",
              "            if(ArrayDim(TerronArr) > 1) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(TerronArr) > 2) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(TerronArr) > 3) tfloat = tfloat * 105 / 100;",
              "            if(ArrayDim(TerronArr) > 4) tfloat = tfloat * 110 / 100;",
              "            TerronFl = TerronFl + tfloat;",
              "            GalaxyDominatorResearchPercent(2,GalaxyDominatorResearchPercent(2)+tfloat);",
              "        }",
              "    }",
              "    //tfloat высчитывает средний процент прогресса, а переменные типа BlazerFl запоминают, на сколько скриптом было продвинуто исследование, чтобы сохранить чистоту вычислений",
              "    if(GrRND != 0) GrRND = GrRND - 1;",
              "    if(LilRND != 0) LilRND = LilRND - 1;",
              "    if(ForwardsRND != 0) ForwardsRND = ForwardsRND + 1;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  30,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  33,
          "Total.Lines":  6,
          "Code.Type":  "Init",
          "Code":          
          [
              "for(i=0;GalaxyStars()>i;i=i+1) {",
              "    tdwd = GalaxyStar(i);",
              "    for(j=0;StarShips(tdwd)>j;j=j+1) {",
              "        if(ShipTypeN(StarShips(tdwd,j)) == t_SB) SBcnt = SBcnt + 1;",
              "    }",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "PlanetNew",
          "Pos.x":  -100,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -100,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "StarNew",
          "Pos.x":  -100,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "StateNew",
          "Pos.x":  -100,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  3,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "cdRangers",
          "Pos.x":  -100,
          "Pos.y":  -160,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  -100,
          "Pos.y":  -190,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tShip",
          "Pos.x":  -100,
          "Pos.y":  -220,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tStr",
          "Pos.x":  -20,
          "Pos.y":  -220,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd",
          "Pos.x":  -100,
          "Pos.y":  -250,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tempArr",
          "Pos.x":  -20,
          "Pos.y":  -250,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlazerArr",
          "Pos.x":  -100,
          "Pos.y":  -280,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "KellerArr",
          "Pos.x":  -100,
          "Pos.y":  -310,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TerronArr",
          "Pos.x":  -100,
          "Pos.y":  -340,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CountFlag1",
          "Pos.x":  10,
          "Pos.y":  -340,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CountFlag2",
          "Pos.x":  10,
          "Pos.y":  -310,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CountFlag3",
          "Pos.x":  10,
          "Pos.y":  -280,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  10,
          "Pos.y":  -190,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "GrRND",
          "Pos.x":  130,
          "Pos.y":  -340,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "500",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "LilRND",
          "Pos.x":  130,
          "Pos.y":  -310,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ForwardsRND",
          "Pos.x":  130,
          "Pos.y":  -280,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Int",
          "Init":  "950",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "Etap",
          "Pos.x":  50,
          "Pos.y":  -220,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "j",
          "Pos.x":  60,
          "Pos.y":  -190,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlazerInv",
          "Pos.x":  130,
          "Pos.y":  -230,
          "Parent":  -1,
          "#":  25,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "KellerInv",
          "Pos.x":  130,
          "Pos.y":  -200,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TerronInv",
          "Pos.x":  130,
          "Pos.y":  -170,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tfloat",
          "Pos.x":  20,
          "Pos.y":  -160,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Float",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "BlazerFl",
          "Pos.x":  270,
          "Pos.y":  -340,
          "Parent":  -1,
          "#":  29,
          "Var.Type":  "Float",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TerronFl",
          "Pos.x":  270,
          "Pos.y":  -310,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Float",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "KellerFl",
          "Pos.x":  270,
          "Pos.y":  -280,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Float",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "SBcnt",
          "Pos.x":  270,
          "Pos.y":  -200,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}