{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -714,
  "ViewPos.y":  -453,
  "ScriptName":  "Mod_RefPlanRetrash",
  "ScriptFileOut":  "M:\\AРазработка\\RefPlanetRetrashing\\DATA\\Script\\Mod_RefPlanRetrash.scr",
  "ScriptTextOut":  "M:\\AРазработка\\RefPlanetRetrashing\\DATA\\Script\\Mod_RefPlanRetrash.txt",
  "GraphPoint.Count":  12,
  "GraphLink.Count":  4,
  "GraphRectText.Count":  0,
  "Variables.Count":  5,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  2,
  "Statements.Count":  0,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "GroupNew",
          "Pos.x":  -100,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  4,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -40,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  0,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  34,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetShipPlanet(Player()) != 0) {",
              "    if(PlanetOwner(GetShipPlanet(Player())) == 6) {",
              "        if(PlanetTerrain(GetShipPlanet(Player()),0) > 0) {",
              "            if(PlanetTerrain(GetShipPlanet(Player()),0) == PlanetTerrainExplored(GetShipPlanet(Player()),0)) temp_int = temp_int + 1;",
              "        }",
              "        if(PlanetTerrain(GetShipPlanet(Player()),1) > 0) {",
              "            if(PlanetTerrain(GetShipPlanet(Player()),1) == PlanetTerrainExplored(GetShipPlanet(Player()),1)) temp_int = temp_int + 1;",
              "        } //собирательный образ проверки, исследована ли полностью планета",
              "        if(PlanetTerrain(GetShipPlanet(Player()),2) > 0) {",
              "            if(PlanetTerrain(GetShipPlanet(Player()),2) == PlanetTerrainExplored(GetShipPlanet(Player()),2)) temp_int = temp_int + 1;",
              "        }",
              "        if(temp_int == 3) {",
              "            if(!ArrayFind(PlanArray,Id(GetShipPlanet(Player()))) {",
              "                arraychange(CountArray,ArrayDim(CountArray) + 1);",
              "                ArrayAdd(PlanArray,Id(GetShipPlanet(Player())));",
              "                temp_count = temp_count + 1;",
              "                CountArray[temp_count] = Rnd(3650,4000);",
              "            }",
              "        }",
              "    }",
              "}",
              "while (ForTimering <= ArrayDim(CountArray)){  //чтобы не писать каждый элемент массива, отнимаем 1 от КД циклично",
              "    CountArray[ForTimering] = CountArray[ForTimering] - 1;",
              "    if(CountArray[ForTimering] == 0) {",
              "        PlanetTerrain(IdToPlanet(PlanArray[ForTimering]),0,PlanetTerrainExplored(IdToPlanet(PlanArray[ForTimering]),0));",
              "        PlanetTerrain(IdToPlanet(PlanArray[ForTimering]),1,PlanetTerrainExplored(IdToPlanet(PlanArray[ForTimering]),1));",
              "        PlanetTerrain(IdToPlanet(PlanArray[ForTimering]),2,PlanetTerrainExplored(IdToPlanet(PlanArray[ForTimering]),2));",
              "        arraychange(CountArray,ArrayDim(CountArray) - 1);",
              "        ArrayDelete(PlanArray[ForTimering]);",
              "    }",
              "    ForTimering = ForTimering + 1;",
              "}",
              "temp_int = 0;",
              ""          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "PlanetNew",
          "Pos.x":  -100,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -100,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "StarNew",
          "Pos.x":  -100,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "StateNew",
          "Pos.x":  -100,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  3,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "PlanArray",
          "Pos.x":  30,
          "Pos.y":  20,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Array",
          "Init":  "250",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_count",
          "Pos.x":  30,
          "Pos.y":  -10,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ForTimering",
          "Pos.x":  30,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  9,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CountArray",
          "Pos.x":  30,
          "Pos.y":  50,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Array",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "temp_int",
          "Pos.x":  170,
          "Pos.y":  -40,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  1,
  "BlockPar.EC":  
  [
    {
      "#":  "1",
      "String":  "Phaeton"    
    }  
  ]
}