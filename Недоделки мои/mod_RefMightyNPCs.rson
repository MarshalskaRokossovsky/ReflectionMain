{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -338,
  "ViewPos.y":  -248,
  "ScriptName":  "Mod_RefMightyNPCs",
  "ScriptFileOut":  "C:\\Users\\DmitB\\Фиксы\\ReflectionFixes\\Mods\\Reflection\\RefMightyNPCs\\DATA\\Script\\Mod_RefMightyNPCs.scr",
  "ScriptTextOut":  "C:\\Users\\DmitB\\Фиксы\\ReflectionFixes\\Mods\\Reflection\\RefMightyNPCs\\DATA\\Script\\Mod_RefMightyNPCs.txt",
  "GraphPoint.Count":  39,
  "GraphLink.Count":  6,
  "GraphRectText.Count":  4,
  "Variables.Count":  29,
  "Stars.Count":  1,
  "Planets.Count":  1,
  "Ships.Count":  1,
  "States.Count":  1,
  "Groups.Count":  1,
  "Places.Count":  0,
  "Items.Count":  0,
  "Ethers.Count":  0,
  "Dialogs.Count":  0,
  "DialogMessages.Count":  0,
  "DialogAnswers.Count":  0,
  "Operations.Count":  4,
  "Statements.Count":  1,
  "Loops.Count":  0,
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "PlayerGroup",
          "Pos.x":  200,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  3,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  6,
          "Total.Lines":  495,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Делал этот блок когда-то давно, когда был гораздо менее опытным",
              "//Но жалко, да и, вроде, пахает. Так что оставлю, но новое буду делать в отдельном блоке ниже",
              "CurTechs = GalaxyTechLevel() + 1;",
              "if(SpawnNpcs == 0) {",
              "    while (RangersNeeded < RangersSpawned) {",
              "        if(CurTurn >= 260) {",
              "            while(PlanetForSpawn == 0) {",
              "                cur_star = GalaxyStar(Rnd(0,j-1)); //выбираем рандомную звёздов",
              "                TryAgain = TryAgain + 1;",
              "                if(TryAgain==1000) break;",
              "                if(StarOwner(cur_star)>0) continue; //Исключаем некоалиционные системы и системы с кастомной расой",
              "                if(StarCustomFaction(cur_star)!='') continue;",
              "                if(StarToCon(cur_star)==StarToCon(PlanetToStar(PlanetPirateClan()))) continue; //Исключаем Тортугац и Нифигац на всякий случай",
              "                i = StarPlanets(cur_star);",
              "                cur_planet = StarPlanets(cur_star,Rnd(0,i-1));",
              "                while(PlanetOwner(cur_planet)==6) {",
              "                    cur_planet = StarPlanets(cur_star,Rnd(0,i-1));",
              "                    TryAgainPlanets = TryAgainPlanets+1;",
              "                    if(TryAgainPlanets==30) break; //если перебрали всё, а не нашли заселёнок",
              "                }",
              "                if(TryAgainPlanets==30) continue;",
              "                PlanetForSpawn = cur_planet;",
              "            }",
              "            Ranger = BuyRanger(PlanetForSpawn,450);",
              "            ShipRefit(Ranger);",
              "            ShipRefit(Ranger);",
              "            ShipImproveItems(Ranger,4);",
              "            if(CurTurn <= 1700) {",
              "                RankRnd = Rnd(3,5);",
              "                ShipHP = Rnd(650,850);",
              "            }",
              "            if(CurTurn <= 3100) {",
              "                RankRnd = Rnd(4,6);",
              "                ShipHP = Rnd(850,1050);",
              "            }",
              "            if(CurTurn <= 6300) {",
              "                RankRnd = Rnd(5,7);",
              "                ShipHP = Rnd(950,1250);",
              "            }",
              "            if(CurTurn <= 7800) {",
              "                RankRnd = Rnd(6,7);",
              "                ShipHP = Rnd(1250,1650);",
              "            }",
              "            ShipRaiseRank(Ranger,RankRnd);",
              "            HullHP(Ranger,ShipHP);",
              "            OtherRnd = Rnd(3,6);",
              "            ShipSkill(Ranger,0,OtherRnd);",
              "            OtherRnd = Rnd(3,6);",
              "            ShipSkill(Ranger,1,OtherRnd);",
              "            OtherRnd = Rnd(2,5);",
              "            ShipSkill(Ranger,2,OtherRnd);",
              "            OtherRnd = Rnd(2,4);",
              "            ShipSkill(Ranger,5,OtherRnd);",
              "            CountOfGoodEquips = Rnd(2,5);",
              "            ItemIsInUse(10,Ranger,1,1);",
              "            ItemIsInUse(12,Ranger,1,2);",
              "            ItemIsInUse(16,Ranger,1,3);",
              "            ItemIsInUse(40,Ranger,1,4);",
              "            while(CountOfGoodEquips > 0) {",
              "                NumberOfEquip = Rnd(43,49);",
              "                if(NumberOfEquip == AntiEquiping) continue;",
              "                if(NumberOfEquip == AntiEquiping1) continue;",
              "                if(NumberOfEquip == AntiEquiping2) continue;",
              "                if(NumberOfEquip == AntiEquiping3) continue;",
              "                SizeOfEquip = Rnd(25,45);",
              "                Equip = CreateEquipment(NumberOfEquip,SizeOfEquip,CurTechs,Fei);",
              "                ItemIsInUse(Equip,Ranger,1);",
              "                CountOfGoodEquips = CountOfGoodEquips - 1;",
              "                ForAntiEquiping = ForAntiEquiping + 1;",
              "                if(ForAntiEquiping == 1) {",
              "                    AntiEquiping = AntiEquiping + NumberOfEquip;",
              "                }",
              "                if(ForAntiEquiping == 2) {",
              "                    AntiEquiping1 = AntiEquiping1 + NumberOfEquip;",
              "                }",
              "                if(ForAntiEquiping == 3) {",
              "                    AntiEquiping2 = AntiEquiping2 + NumberOfEquip;",
              "                }",
              "                if(ForAntiEquiping == 4) {",
              "                    AntiEquiping3 = AntiEquiping3 + NumberOfEquip;",
              "                }",
              "            }",
              "            FixOverweight(Ranger);",
              "            ShipFreeFlight(Ranger);",
              "            RangersSpawned = RangersSpawned + 1;",
              "            SFT('Новый рейнджер построен');",
              "        }",
              "    }",
              "    PlanetForSpawn = 0;",
              "}",
              "if(SpawnNpcs >= 1) {",
              "    while(PlanetForSpawn == 0) {",
              "        cur_star = GalaxyStar(Rnd(0,j-1)); //выбираем рандомную звёздов",
              "        TryAgain = TryAgain + 1;",
              "        if(TryAgain==1000) break;",
              "        if(StarOwner(cur_star)>0) continue; //Исключаем некоалиционные системы и системы с кастомной расой",
              "        if(StarCustomFaction(cur_star)!='') continue;",
              "        if(StarToCon(cur_star)==StarToCon(PlanetToStar(PlanetPirateClan()))) continue; //Исключаем Тортугац и Нифигац на всякий случай",
              "        i = StarPlanets(cur_star);",
              "        cur_planet = StarPlanets(cur_star,Rnd(0,i-1));",
              "        while(PlanetOwner(cur_planet)==6) {",
              "            cur_planet = StarPlanets(cur_star,Rnd(0,i-1));",
              "            TryAgainPlanets = TryAgainPlanets+1;",
              "            if(TryAgainPlanets==30) break; //если перебрали всё, а не нашли заселёнок",
              "        }",
              "        if(TryAgainPlanets==30) continue;",
              "        PlanetForSpawn = cur_planet;",
              "    }",
              "    if(CurTurn == 1900) {",
              "        Ranger = BuyRanger(PlanetForSpawn,450);",
              "        ShipRefit(Ranger);",
              "        ShipRefit(Ranger);",
              "        ShipImproveItems(Ranger,7);",
              "        if(CurTurn <= 1700) {",
              "            RankRnd = Rnd(3,5);",
              "            ShipHP = Rnd(650,850);",
              "        }",
              "        if(CurTurn <= 3100) {",
              "            RankRnd = Rnd(4,6);",
              "            ShipHP = Rnd(850,1050);",
              "        }",
              "        if(CurTurn <= 6300) {",
              "            RankRnd = Rnd(5,7);",
              "            ShipHP = Rnd(950,1250);",
              "        }",
              "        if(CurTurn <= 7800) {",
              "            RankRnd = Rnd(6,7);",
              "            ShipHP = Rnd(1250,1650);",
              "        }",
              "        ShipRaiseRank(Ranger,RankRnd);",
              "        HullHP(Ranger,ShipHP);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,0,OtherRnd);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,1,OtherRnd);",
              "        OtherRnd = Rnd(2,5);",
              "        ShipSkill(Ranger,2,OtherRnd);",
              "        OtherRnd = Rnd(2,4);",
              "        ShipSkill(Ranger,5,OtherRnd);",
              "        CountOfGoodEquips = Rnd(2,5);",
              "        ItemIsInUse(10,Ranger,1,1);",
              "        ItemIsInUse(12,Ranger,1,2);",
              "        ItemIsInUse(16,Ranger,1,3);",
              "        ItemIsInUse(40,Ranger,1,4);",
              "        while(CountOfGoodEquips > 0) {",
              "            NumberOfEquip = Rnd(43,49);",
              "            if(NumberOfEquip == AntiEquiping) continue;",
              "            if(NumberOfEquip == AntiEquiping1) continue;",
              "            if(NumberOfEquip == AntiEquiping2) continue;",
              "            if(NumberOfEquip == AntiEquiping3) continue;",
              "            SizeOfEquip = Rnd(25,45);",
              "            Equip = CreateEquipment(NumberOfEquip,SizeOfEquip,CurTechs,Fei);",
              "            ItemIsInUse(Equip,Ranger,1);",
              "            CountOfGoodEquips = CountOfGoodEquips - 1;",
              "            ForAntiEquiping = ForAntiEquiping + 1;",
              "            if(ForAntiEquiping == 1) {",
              "                AntiEquiping = AntiEquiping + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 2) {",
              "                AntiEquiping1 = AntiEquiping1 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 3) {",
              "                AntiEquiping2 = AntiEquiping2 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 4) {",
              "                AntiEquiping3 = AntiEquiping3 + NumberOfEquip;",
              "            }",
              "        }",
              "        FixOverweight(Ranger);",
              "        ShipFreeFlight(Ranger);",
              "        RangersSpawned = RangersSpawned + 1;",
              "    }",
              "    if(CurTurn == 4000) {",
              "        Ranger = BuyRanger(PlanetForSpawn,450);",
              "        ShipRefit(Ranger);",
              "        ShipRefit(Ranger);",
              "        ShipImproveItems(Ranger,11);",
              "        if(CurTurn <= 1700) {",
              "            RankRnd = Rnd(3,5);",
              "            ShipHP = Rnd(650,850);",
              "        }",
              "        if(CurTurn <= 3100) {",
              "            RankRnd = Rnd(4,6);",
              "            ShipHP = Rnd(850,1050);",
              "        }",
              "        if(CurTurn <= 6300) {",
              "            RankRnd = Rnd(5,7);",
              "            ShipHP = Rnd(950,1250);",
              "        }",
              "        if(CurTurn <= 7800) {",
              "            RankRnd = Rnd(6,7);",
              "            ShipHP = Rnd(1250,1650);",
              "        }",
              "        ShipRaiseRank(Ranger,RankRnd);",
              "        HullHP(Ranger,ShipHP);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,0,OtherRnd);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,1,OtherRnd);",
              "        OtherRnd = Rnd(2,5);",
              "        ShipSkill(Ranger,2,OtherRnd);",
              "        OtherRnd = Rnd(2,4);",
              "        ShipSkill(Ranger,5,OtherRnd);",
              "        CountOfGoodEquips = Rnd(2,5);",
              "        ItemIsInUse(10,Ranger,1,1);",
              "        ItemIsInUse(12,Ranger,1,2);",
              "        ItemIsInUse(16,Ranger,1,3);",
              "        ItemIsInUse(40,Ranger,1,4);",
              "        while(CountOfGoodEquips > 0) {",
              "            NumberOfEquip = Rnd(43,49);",
              "            if(NumberOfEquip == AntiEquiping) continue;",
              "            if(NumberOfEquip == AntiEquiping1) continue;",
              "            if(NumberOfEquip == AntiEquiping2) continue;",
              "            if(NumberOfEquip == AntiEquiping3) continue;",
              "            SizeOfEquip = Rnd(25,45);",
              "            Equip = CreateEquipment(NumberOfEquip,SizeOfEquip,CurTechs,Fei);",
              "            ItemIsInUse(Equip,Ranger,1);",
              "            CountOfGoodEquips = CountOfGoodEquips - 1;",
              "            ForAntiEquiping = ForAntiEquiping + 1;",
              "            if(ForAntiEquiping == 1) {",
              "                AntiEquiping = AntiEquiping + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 2) {",
              "                AntiEquiping1 = AntiEquiping1 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 3) {",
              "                AntiEquiping2 = AntiEquiping2 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 4) {",
              "                AntiEquiping3 = AntiEquiping3 + NumberOfEquip;",
              "            }",
              "        }",
              "        FixOverweight(Ranger);",
              "        ShipFreeFlight(Ranger);",
              "        RangersSpawned = RangersSpawned + 1;",
              "    }",
              "    if(CurTurn == 7000) {",
              "        Ranger = BuyRanger(PlanetForSpawn,450);",
              "        ShipRefit(Ranger);",
              "        ShipRefit(Ranger);",
              "        ShipImproveItems(Ranger,13);",
              "        if(CurTurn <= 1700) {",
              "            RankRnd = Rnd(3,5);",
              "            ShipHP = Rnd(650,850);",
              "        }",
              "        if(CurTurn <= 3100) {",
              "            RankRnd = Rnd(4,6);",
              "            ShipHP = Rnd(850,1050);",
              "        }",
              "        if(CurTurn <= 6300) {",
              "            RankRnd = Rnd(5,7);",
              "            ShipHP = Rnd(950,1250);",
              "        }",
              "        if(CurTurn <= 7800) {",
              "            RankRnd = Rnd(6,7);",
              "            ShipHP = Rnd(1250,1650);",
              "        }",
              "        ShipRaiseRank(Ranger,RankRnd);",
              "        HullHP(Ranger,ShipHP);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,0,OtherRnd);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,1,OtherRnd);",
              "        OtherRnd = Rnd(2,5);",
              "        ShipSkill(Ranger,2,OtherRnd);",
              "        OtherRnd = Rnd(2,4);",
              "        ShipSkill(Ranger,5,OtherRnd);",
              "        CountOfGoodEquips = Rnd(2,5);",
              "        ItemIsInUse(10,Ranger,1,1);",
              "        ItemIsInUse(12,Ranger,1,2);",
              "        ItemIsInUse(16,Ranger,1,3);",
              "        ItemIsInUse(40,Ranger,1,4);",
              "        while(CountOfGoodEquips > 0) {",
              "            NumberOfEquip = Rnd(43,49);",
              "            if(NumberOfEquip == AntiEquiping) continue;",
              "            if(NumberOfEquip == AntiEquiping1) continue;",
              "            if(NumberOfEquip == AntiEquiping2) continue;",
              "            if(NumberOfEquip == AntiEquiping3) continue;",
              "            SizeOfEquip = Rnd(25,45);",
              "            Equip = CreateEquipment(NumberOfEquip,SizeOfEquip,CurTechs,Fei);",
              "            ItemIsInUse(Equip,Ranger,1);",
              "            CountOfGoodEquips = CountOfGoodEquips - 1;",
              "            ForAntiEquiping = ForAntiEquiping + 1;",
              "            if(ForAntiEquiping == 1) {",
              "                AntiEquiping = AntiEquiping + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 2) {",
              "                AntiEquiping1 = AntiEquiping1 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 3) {",
              "                AntiEquiping2 = AntiEquiping2 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 4) {",
              "                AntiEquiping3 = AntiEquiping3 + NumberOfEquip;",
              "            }",
              "        }",
              "        FixOverweight(Ranger);",
              "        ShipFreeFlight(Ranger);",
              "        RangersSpawned = RangersSpawned + 1;",
              "    }",
              "    if(CurTurn == 9000) {",
              "        Ranger = BuyRanger(PlanetForSpawn,450);",
              "        ShipRefit(Ranger);",
              "        ShipRefit(Ranger);",
              "        ShipImproveItems(Ranger,15);",
              "        if(CurTurn <= 1700) {",
              "            RankRnd = Rnd(3,5);",
              "            ShipHP = Rnd(650,850);",
              "        }",
              "        if(CurTurn <= 3100) {",
              "            RankRnd = Rnd(4,6);",
              "            ShipHP = Rnd(850,1050);",
              "        }",
              "        if(CurTurn <= 6300) {",
              "            RankRnd = Rnd(5,7);",
              "            ShipHP = Rnd(950,1250);",
              "        }",
              "        if(CurTurn <= 7800) {",
              "            RankRnd = Rnd(6,7);",
              "            ShipHP = Rnd(1250,1650);",
              "        }",
              "        ShipRaiseRank(Ranger,RankRnd);",
              "        HullHP(Ranger,ShipHP);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,0,OtherRnd);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,1,OtherRnd);",
              "        OtherRnd = Rnd(2,5);",
              "        ShipSkill(Ranger,2,OtherRnd);",
              "        OtherRnd = Rnd(2,4);",
              "        ShipSkill(Ranger,5,OtherRnd);",
              "        CountOfGoodEquips = Rnd(2,5);",
              "        ItemIsInUse(10,Ranger,1,1);",
              "        ItemIsInUse(12,Ranger,1,2);",
              "        ItemIsInUse(16,Ranger,1,3);",
              "        ItemIsInUse(40,Ranger,1,4);",
              "        while(CountOfGoodEquips > 0) {",
              "            NumberOfEquip = Rnd(43,49);",
              "            if(NumberOfEquip == AntiEquiping) continue;",
              "            if(NumberOfEquip == AntiEquiping1) continue;",
              "            if(NumberOfEquip == AntiEquiping2) continue;",
              "            if(NumberOfEquip == AntiEquiping3) continue;",
              "            SizeOfEquip = Rnd(25,45);",
              "            Equip = CreateEquipment(NumberOfEquip,SizeOfEquip,CurTechs,Fei);",
              "            ItemIsInUse(Equip,Ranger,1);",
              "            CountOfGoodEquips = CountOfGoodEquips - 1;",
              "            ForAntiEquiping = ForAntiEquiping + 1;",
              "            if(ForAntiEquiping == 1) {",
              "                AntiEquiping = AntiEquiping + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 2) {",
              "                AntiEquiping1 = AntiEquiping1 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 3) {",
              "                AntiEquiping2 = AntiEquiping2 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 4) {",
              "                AntiEquiping3 = AntiEquiping3 + NumberOfEquip;",
              "            }",
              "        }",
              "        FixOverweight(Ranger);",
              "        ShipFreeFlight(Ranger);",
              "        RangersSpawned = RangersSpawned + 1;",
              "    }",
              "    if(CurTurn == 11000) {",
              "        Ranger = BuyRanger(PlanetForSpawn,450);",
              "        ShipRefit(Ranger);",
              "        ShipRefit(Ranger);",
              "        ShipImproveItems(Ranger,17);",
              "        if(CurTurn <= 1700) {",
              "            RankRnd = Rnd(3,5);",
              "            ShipHP = Rnd(650,850);",
              "        }",
              "        if(CurTurn <= 3100) {",
              "            RankRnd = Rnd(4,6);",
              "            ShipHP = Rnd(850,1050);",
              "        }",
              "        if(CurTurn <= 6300) {",
              "            RankRnd = Rnd(5,7);",
              "            ShipHP = Rnd(950,1250);",
              "        }",
              "        if(CurTurn <= 7800) {",
              "            RankRnd = Rnd(6,7);",
              "            ShipHP = Rnd(1250,1650);",
              "        }",
              "        ShipRaiseRank(Ranger,RankRnd);",
              "        HullHP(Ranger,ShipHP);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,0,OtherRnd);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,1,OtherRnd);",
              "        OtherRnd = Rnd(2,5);",
              "        ShipSkill(Ranger,2,OtherRnd);",
              "        OtherRnd = Rnd(2,4);",
              "        ShipSkill(Ranger,5,OtherRnd);",
              "        CountOfGoodEquips = Rnd(2,5);",
              "        ItemIsInUse(10,Ranger,1,1);",
              "        ItemIsInUse(12,Ranger,1,2);",
              "        ItemIsInUse(16,Ranger,1,3);",
              "        ItemIsInUse(40,Ranger,1,4);",
              "        while(CountOfGoodEquips > 0) {",
              "            NumberOfEquip = Rnd(43,49);",
              "            if(NumberOfEquip == AntiEquiping) continue;",
              "            if(NumberOfEquip == AntiEquiping1) continue;",
              "            if(NumberOfEquip == AntiEquiping2) continue;",
              "            if(NumberOfEquip == AntiEquiping3) continue;",
              "            SizeOfEquip = Rnd(25,45);",
              "            Equip = CreateEquipment(NumberOfEquip,SizeOfEquip,CurTechs,Fei);",
              "            ItemIsInUse(Equip,Ranger,1);",
              "            CountOfGoodEquips = CountOfGoodEquips - 1;",
              "            ForAntiEquiping = ForAntiEquiping + 1;",
              "            if(ForAntiEquiping == 1) {",
              "                AntiEquiping = AntiEquiping + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 2) {",
              "                AntiEquiping1 = AntiEquiping1 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 3) {",
              "                AntiEquiping2 = AntiEquiping2 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 4) {",
              "                AntiEquiping3 = AntiEquiping3 + NumberOfEquip;",
              "            }",
              "        }",
              "        FixOverweight(Ranger);",
              "        ShipFreeFlight(Ranger);",
              "        RangersSpawned = RangersSpawned + 1;",
              "    }",
              "    if(CurTurn == 22000) {",
              "        Ranger = BuyRanger(PlanetForSpawn,450);",
              "        ShipRefit(Ranger);",
              "        ShipRefit(Ranger);",
              "        ShipImproveItems(Ranger,24);",
              "        if(CurTurn <= 1700) {",
              "            RankRnd = Rnd(3,5);",
              "            ShipHP = Rnd(650,850);",
              "        }",
              "        if(CurTurn <= 3100) {",
              "            RankRnd = Rnd(4,6);",
              "            ShipHP = Rnd(850,1050);",
              "        }",
              "        if(CurTurn <= 6300) {",
              "            RankRnd = Rnd(5,7);",
              "            ShipHP = Rnd(950,1250);",
              "        }",
              "        if(CurTurn <= 7800) {",
              "            RankRnd = Rnd(6,7);",
              "            ShipHP = Rnd(1250,1650);",
              "        }",
              "        ShipRaiseRank(Ranger,RankRnd);",
              "        HullHP(Ranger,ShipHP);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,0,OtherRnd);",
              "        OtherRnd = Rnd(3,6);",
              "        ShipSkill(Ranger,1,OtherRnd);",
              "        OtherRnd = Rnd(2,5);",
              "        ShipSkill(Ranger,2,OtherRnd);",
              "        OtherRnd = Rnd(2,4);",
              "        ShipSkill(Ranger,5,OtherRnd);",
              "        CountOfGoodEquips = Rnd(2,5);",
              "        ItemIsInUse(10,Ranger,1,1);",
              "        ItemIsInUse(12,Ranger,1,2);",
              "        ItemIsInUse(16,Ranger,1,3);",
              "        ItemIsInUse(40,Ranger,1,4);",
              "        RangerExcludedFromRating(Ranger,0);",
              "        while(CountOfGoodEquips > 0) {",
              "            NumberOfEquip = Rnd(43,49);",
              "            if(NumberOfEquip == AntiEquiping) continue;",
              "            if(NumberOfEquip == AntiEquiping1) continue;",
              "            if(NumberOfEquip == AntiEquiping2) continue;",
              "            if(NumberOfEquip == AntiEquiping3) continue;",
              "            SizeOfEquip = Rnd(25,45);",
              "            Equip = CreateEquipment(NumberOfEquip,SizeOfEquip,CurTechs,Fei);",
              "            ItemIsInUse(Equip,Ranger,1);",
              "            CountOfGoodEquips = CountOfGoodEquips - 1;",
              "            ForAntiEquiping = ForAntiEquiping + 1;",
              "            if(ForAntiEquiping == 1) {",
              "                AntiEquiping = AntiEquiping + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 2) {",
              "                AntiEquiping1 = AntiEquiping1 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 3) {",
              "                AntiEquiping2 = AntiEquiping2 + NumberOfEquip;",
              "            }",
              "            if(ForAntiEquiping == 4) {",
              "                AntiEquiping3 = AntiEquiping3 + NumberOfEquip;",
              "            }",
              "        }",
              "        RangersSpawned = RangersSpawned + 1;",
              "        FixOverweight(Ranger);",
              "        ShipFreeFlight(Ranger);",
              "    }",
              "    PlanetForSpawn = 0;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  9,
          "Total.Lines":  31,
          "Code.Type":  "Init",
          "Code":          
          [
              "if(GalaxyDiffLevels <= 500) {",
              "    RangersNeeded = 1;",
              "}",
              "if(GalaxyDiffLevels <= 400) {",
              "    RangersNeeded = 2;",
              "}",
              "if(GalaxyDiffLevels <= 300) {",
              "    RangersNeeded = 3;",
              "}",
              "if(GalaxyDiffLevels <= 200) {",
              "    RangersNeeded = 4;",
              "}",
              "if(GalaxyDiffLevels <= 150) {",
              "    RangersNeeded = 3;",
              "}",
              "if(GalaxyDiffLevels <= 100) {",
              "    RangersNeeded = 2;",
              "}",
              "//Функция для исправления перевеса корабля (если он есть): расширяет вместимость корпуса, повышает HP до максимума",
              "function FixOverweight(ship)",
              "{",
              "    ShipCalcParam(ship);",
              "    int space = ShipFreeSpace(ship);",
              "    if(space < 0)",
              "    {",
              "        dword hull = ShipItems(ship, 0);",
              "        ItemSize(hull, ItemSize(hull) + abs(space) + Rnd(1, 3));",
              "        HullHP(hull, ItemSize(hull));",
              "        ShipCalcParam(ship);",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  310,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  25,
          "Total.Lines":  1,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  29,
          "Total.Lines":  42,
          "Code.Type":  "Turn",
          "Code":          
          [
              "//Награждаем крупные корабли Коалиции системами ПРО",
              "//Пиратскому металлолому вешаем Ракетанг",
              "if(GalaxyShipId()>lastShipId) {",
              "    tdwd=BuildListOfNewShips(tempArr,lastShipId,8+16,1+2+4+8+16+128,1,'');",
              "    if(tdwd) {    //Если найден хотя бы один корабль",
              "        for(i=0;i<ArrayDim(tempArr);i=i+1) {",
              "            tdwd=0;    //Обнуляем флаг",
              "            tShip=tempArr[i];    //Выбираем корабль",
              "            if(IsPlayer(tShip)) continue;",
              "            tStr=ShipType(tShip);",
              "            if(tStr=='PirateGalleon' || tStr=='PirateFrigate' || tStr=='PirateCorvette') {",
              "                if(GetEquipmentStats(ShipEqInSlot(tShip,t_Hull),3) > 1) {",
              "                    tArt = CreateArt(t_ArtMissileDef,Pirate);",
              "                    AddItemToShip(tShip,tArt);",
              "                    ItemIsInUse(tShip,tArt,1,1);",
              "                    NoDropItem(tArt,1);",
              "                }",
              "            }",
              "            if(tStr=='Dreadnought') {",
              "                if(GetEquipmentStats(ShipEqInSlot(tShip,t_Hull),3) > 1) {",
              "                    tArt = CreateArt(t_ArtPDTurret,Fei);",
              "                    AddItemToShip(tShip,tArt);",
              "                    ItemIsInUse(tShip,tArt,1,1);",
              "                    ShipAddCustomShipInfo(tShip,'RefPVOFix','NoShow');",
              "                    NoDropItem(tArt,1);",
              "                }",
              "            }",
              "            if(tStr=='Warrior') {",
              "                if(ShipSubType(tShip) == 1) {",
              "                    if(GetEquipmentStats(ShipEqInSlot(tShip,t_Hull),3) > 1) {",
              "                        tArt = CreateArt(t_ArtPDTurret,Fei);",
              "                        AddItemToShip(tShip,tArt);",
              "                        ItemIsInUse(tShip,tArt,1,1);",
              "                        ShipAddCustomShipInfo(tShip,'RefPVOFix','NoShow');",
              "                        NoDropItem(tArt,1);",
              "                    }",
              "                }",
              "            }",
              "        }",
              "    }",
              "    lastShipId=GalaxyShipId();    //Обновляем Id последнего рожденного корабля",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "InitPlanet",
          "Pos.x":  200,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  2,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  200,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  0,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "InitStar",
          "Pos.x":  200,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  1,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "Statements":      
      [
        {
          "Type":  "Tif",
          "Name":  "",
          "Pos.x":  340,
          "Pos.y":  130,
          "Parent":  -1,
          "#":  5,
          "Total.Lines":  1,
          "Code.Type":  "Turn",
          "Code":          
          [
              "CoalitionDefeated() == 0"          
          ]        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "PlayerState",
          "Pos.x":  200,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  4,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "SpawnNpcs",
          "Pos.x":  470,
          "Pos.y":  140,
          "Parent":  -1,
          "#":  7,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RangersNeeded",
          "Pos.x":  470,
          "Pos.y":  160,
          "Parent":  -1,
          "#":  8,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "Ranger",
          "Pos.x":  470,
          "Pos.y":  180,
          "Parent":  -1,
          "#":  10,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CountOfGoodEquips",
          "Pos.x":  470,
          "Pos.y":  200,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "Equip",
          "Pos.x":  470,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "NumberOfEquip",
          "Pos.x":  470,
          "Pos.y":  240,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "AntiEquiping",
          "Pos.x":  610,
          "Pos.y":  150,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "AntiEquiping2",
          "Pos.x":  610,
          "Pos.y":  190,
          "Parent":  -1,
          "#":  15,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "AntiEquiping1",
          "Pos.x":  610,
          "Pos.y":  170,
          "Parent":  -1,
          "#":  16,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "AntiEquiping3",
          "Pos.x":  610,
          "Pos.y":  210,
          "Parent":  -1,
          "#":  17,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ForAntiEquiping",
          "Pos.x":  470,
          "Pos.y":  260,
          "Parent":  -1,
          "#":  18,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "SizeOfEquip",
          "Pos.x":  470,
          "Pos.y":  280,
          "Parent":  -1,
          "#":  19,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "CurTechs",
          "Pos.x":  610,
          "Pos.y":  230,
          "Parent":  -1,
          "#":  20,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RangersSpawned",
          "Pos.x":  470,
          "Pos.y":  300,
          "Parent":  -1,
          "#":  21,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "RankRnd",
          "Pos.x":  610,
          "Pos.y":  250,
          "Parent":  -1,
          "#":  22,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "ShipHP",
          "Pos.x":  610,
          "Pos.y":  270,
          "Parent":  -1,
          "#":  23,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "OtherRnd",
          "Pos.x":  470,
          "Pos.y":  320,
          "Parent":  -1,
          "#":  24,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "i",
          "Pos.x":  540,
          "Pos.y":  220,
          "Parent":  -1,
          "#":  26,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TryAgainPlanets",
          "Pos.x":  610,
          "Pos.y":  290,
          "Parent":  -1,
          "#":  27,
          "Var.Type":  "Int",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_planet",
          "Pos.x":  610,
          "Pos.y":  310,
          "Parent":  -1,
          "#":  28,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tStr",
          "Pos.x":  470,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  30,
          "Var.Type":  "Str",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tShip",
          "Pos.x":  470,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  31,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tempArr",
          "Pos.x":  470,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  32,
          "Var.Type":  "Array",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tdwd",
          "Pos.x":  470,
          "Pos.y":  490,
          "Parent":  -1,
          "#":  33,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "lastShipId",
          "Pos.x":  470,
          "Pos.y":  510,
          "Parent":  -1,
          "#":  34,
          "Var.Type":  "Dword",
          "Init":  "0",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "tArt",
          "Pos.x":  600,
          "Pos.y":  430,
          "Parent":  -1,
          "#":  35,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "PlanetForSpawn",
          "Pos.x":  600,
          "Pos.y":  450,
          "Parent":  -1,
          "#":  36,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "TryAgain",
          "Pos.x":  600,
          "Pos.y":  470,
          "Parent":  -1,
          "#":  37,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "cur_star",
          "Pos.x":  610,
          "Pos.y":  330,
          "Parent":  -1,
          "#":  38,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  4,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  3,
      "End":  2,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  0,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  5,
      "End":  6,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  6,
      "End":  29,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "Rect.Text":  
  [
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  427,
      "Rect.Top":  105,
      "Rect.Right":  766,
      "Rect.Bottom":  360,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "",
      "Color":  16777215,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  414,
      "Rect.Top":  69,
      "Rect.Right":  783,
      "Rect.Bottom":  99,
      "FStyle":  0,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Старые переменные для блока 1",
      "Color":  16777215,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  410,
      "Rect.Top":  365,
      "Rect.Right":  778,
      "Rect.Bottom":  392,
      "FStyle":  0,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "Новые переменные для блока 2",
      "Color":  16777215,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    },
    {
      "Type":  "TGraphRectText",
      "Rect.Left":  428,
      "Rect.Top":  400,
      "Rect.Right":  770,
      "Rect.Bottom":  658,
      "FStyle":  1,
      "FColor":  10710818,
      "BStyle":  0,
      "BColor":  14474460,
      "BSize":  1,
      "BCoef":  "0.300000011920929",
      "AlignX":  0,
      "AlignY":  0,
      "AlignRect":  false,
      "Text":  "",
      "Color":  16777215,
      "Font":  "Arial",
      "FontSize":  10,
      "fsBold":  false,
      "fsItalic":  false,
      "fsUnderline":  false    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}