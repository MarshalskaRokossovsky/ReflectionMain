{
  "FileID":  573785173,
  "FileVersion":  8,
  "ViewPos.x":  -688,
  "ViewPos.y":  -643,
  "ScriptName":  "Mod_RefEquipTransports",
  "ScriptFileOut":  "C:\\Users\\DmitB\\Фиксы\\Reflection Fixes\\Mods\\Reflection\\RefEquipTransports\\DATA\\Script\\Mod_RefEquipTransports.scr",
  "ScriptTextOut":  "C:\\Users\\DmitB\\Фиксы\\Reflection Fixes\\Mods\\Reflection\\RefEquipTransports\\DATA\\Script\\Mod_RefEquipTransports.txt",
  "Visual.Objects":  
  [
    {
      "Groups":      
      [
        {
          "Type":  "TGroup",
          "Name":  "GroupNew",
          "Pos.x":  -100,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  4,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  1,
          "CntShipMax":  1,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  true,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        },
        {
          "Type":  "TGroup",
          "Name":  "GroupTransports",
          "Pos.x":  20,
          "Pos.y":  0,
          "Parent":  -1,
          "#":  8,
          "Owner":  62,
          "Group.Type":  126,
          "CntShipMin":  0,
          "CntShipMax":  0,
          "SpeedMin":  100,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "AddPlayer":  false,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "DistSearch":  10000,
          "Dialog":  -1,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Operations":      
      [
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  5,
          "Code.Type":  "Global",
          "Code":          
          [
              "GRun();"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -50,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  6,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GroupCount(GroupTransports) < round(ControlledSystems(0)/3)) {",
              "    while(1) {",
              "        int g;",
              "        g = 0;",
              "        t_star = GalaxyStar(Rnd(0,GalaxyStars()-1));",
              "        if(!StarOwner(t_star)) {",
              "            for(t=0;StarPlanets(t_star)>t;t=t+1) {",
              "                if(PlanetOwner(StarPlanets(t_star,t)) == 6) continue;",
              "                else {",
              "                    t_ship = BuyEquipTransport(StarPlanets(t_star,t));",
              "                    t_plan = FindNextPlan(t_ship,StarPlanets(t_star,t));",
              "                    EquipBuy(t_ship,StarPlanets(t_star,t),t_plan);",
              "                    SetData(Id(t_plan),0,t_ship);",
              "                    OrderTakeOff(t_ship);",
              "                    g = 1;",
              "                    break;",
              "                }",
              "            }",
              "        }",
              "        if(g==1) break;",
              "    }",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  -10,
          "Pos.y":  -130,
          "Parent":  -1,
          "#":  7,
          "Code.Type":  "Init",
          "Code":          
          [
              "function BuyEquipTransport(dword plan) {",
              "    dword cur_ship;",
              "    dword item;",
              "    int temp_size;",
              "    int i;",
              "",
              "    cur_ship = BuyTransport(plan,0);",
              "    temp_size = 400 + GalaxyTechLevel() * 250 + RndObject(1,50,cur_ship);",
              "    ItemSize(ShipEqInSlot(cur_ship,t_Hull),temp_size);",
              "    HullHP(cur_ship,temp_size);",
              "",
              "    ShipRefit(cur_ship);",
              "    ArrangeItems(cur_ship);",
              "",
              "    ShipJoinToScript(cur_ship,'Mod_RefEquipTransports.GroupTransports');",
              "",
              "    for(i=t_FuelTanks;i<t_DefGenerator;i=i+1) {",
              "        //Чтобы транспортник не вешал себе невесть чего",
              "        if(!ShipEqInSlot(cur_ship,i)) continue;",
              "        ItemExtraSpecialsAddByType(ShipEqInSlot(cur_ship,i),FindBonusByNameInCfg('RefHybridValue'));",
              "        NoDropItem(ShipEqInSlot(cur_ship,i));",
              "    }",
              "",
              "    result = cur_ship;",
              "}",
              "",
              "//Для манипуляций \"транспорта\" со шмотом",
              "function EquipBuy(dword cur_ship, plan, plan_to) {",
              "    int i;",
              "    int max_need = 0;",
              "    int type_needed = 0;",
              "    dword cur_item;",
              "",
              "    while(ShipFreeSpace(cur_ship) > 29) {",
              "        for(i=1;i<19;i=i+1) {",
              "            if(PlanetInventionLevel(plan,i) > PlanetInventionLevel(plan_to,i)) {",
              "                if(max_need < (PlanetInventionLevel(plan,i) - PlanetInventionLevel(plan_to,i))) {",
              "                    max_need = (PlanetInventionLevel(plan,i) - PlanetInventionLevel(plan_to,i));",
              "                    type_needed = i;",
              "                }",
              "            } //Ищем, что планете наиболее интересно бы взять от своей более развитой соседки",
              "        }",
              "",
              "        if(!type_needed) type_needed = Rnd(1,19); //Если вдруг настолько Галактика прокачалась",
              "",
              "        cur_item = CreateEquipment(42+type_needed,RndObject(20,30,cur_ship),PlanetInventionLevel(plan,type_needed),PlanetOwner(plan));",
              "        if(ShipMoney(cur_ship) < ItemCost(cur_item) + 500) {",
              "            FreeItem(cur_item);",
              "            break;",
              "        }",
              "        else {",
              "            AddItemToShip(cur_ship,cur_item);",
              "            ShipMoney(cur_ship,ShipMoney(cur_ship) - ItemCost(cur_item));",
              "        }",
              "    }",
              "}",
              "function EquipSell(dword cur_ship, plan) {",
              "    int i;",
              "    dword item1;",
              "",
              "    for(i=ShipItems(cur_ship);i>0;i=i-1) {",
              "        item1 = ShipItems(cur_ship,i);",
              "        if(ItemIsInUse(item1)) continue;",
              "        if(Rnd(1,2) == 2) {",
              "            //SFT('RefEquipTransports logging: item '+item1);",
              "            //SFT('RefEquipTransports logging: item name '+Name(item1));",
              "            //SFT('RefEquipTransports logging: ship '+cur_ship);",
              "            //SFT('RefEquipTransports logging: ship name '+Name(cur_ship));",
              "            ShipMoney(cur_ship,ShipMoney(cur_ship)+ItemCost(item1));",
              "            //SFT('RefEquipTransports logging: extra log');",
              "            if(Rnd(1,4) == 4) AddItemToShop(plan,GetItemFromShip(cur_ship,item1));",
              "            else FreeItem(GetItemFromShip(cur_ship,item1));",
              "        }",
              "    }",
              "",
              "    PlanetBoostInventions(plan,3);",
              "}",
              "",
              "//Функция для определения следующей на пути планеты",
              "function FindNextPlan(dword cur_ship, plan) {",
              "    int i;",
              "    int j;",
              "    int y;",
              "    int con;",
              "    dword plan_to;",
              "    dword star;",
              "",
              "    unknown plan_arr = newarray(1);",
              "    ArrayDelete(plan_arr,0);",
              "    unknown tech_arr = newarray(1);",
              "    ArrayDelete(tech_arr,0);",
              "",
              "    //Собираем все планеты в галактике и вручную определяем условный уровень технопрогресса, потому что",
              "    //в нашей игре функций, возвращающих это значение, нету",
              "    for(i=0;GalaxyStars()>i;i=i+1) {",
              "        star = GalaxyStar(i);",
              "        if(StarOwner(star)) continue;",
              "        for(j=0;StarPlanets(star)>j;j=j+1) {",
              "            plan_to = StarPlanets(star,j);",
              "            if(PlanetOwner(plan_to) == 6) continue;",
              "            if(plan == plan_to) continue;",
              "",
              "            ArrayAdd(plan_arr,plan_to);",
              "            con = 0;",
              "            for(y=0;y<19;y=y+1) {",
              "                con = con + PlanetInventionLevel(plan_to,y);",
              "            }",
              "            ArrayAdd(tech_arr,con);",
              "        }",
              "    }",
              "",
              "    ArraySort(tech_arr,plan_arr);",
              "    if(Rnd(1,2) == 2) plan_to = plan_arr[Rnd(1,round(ArrayDim(plan_arr)/20))];",
              "    else plan_to = plan_arr[Rnd(round(ArrayDim(plan_arr)/80),(ArrayDim(plan_arr)-1))];",
              "",
              "    result = plan_to;",
              "}"          
          ]        
        },
        {
          "Type":  "Top",
          "Name":  "",
          "Pos.x":  20,
          "Pos.y":  60,
          "Parent":  -1,
          "#":  10,
          "Code.Type":  "Turn",
          "Code":          
          [
              "if(GetShipPlanet(CurShip)) {",
              "    //EquipSell(CurShip,GetShipPlanet(CurShip));",
              "    t_plan = FindNextPlan(CurShip,GetShipPlanet(CurShip));",
              "    EquipBuy(CurShip,GetShipPlanet(CurShip),t_plan);",
              "    SetData(Id(t_plan),0,CurShip);",
              "",
              "    OrderTakeOff(CurShip);",
              "}",
              "",
              "if(ShipInNormalSpace(CurShip)) {",
              "    if(ShipInStar(CurShip,PlanetToStar(IdToPlanet(GetData())))) {",
              "        OrderLanding(CurShip,IdToPlanet(GetData()));",
              "    }",
              "    else {",
              "        OrderJump(CurShip,PlanetToStar(IdToPlanet(GetData())));",
              "    }",
              "}",
              "",
              "//На случай, если целевую систему отжали железяки с большого гиперкоридора",
              "if(StarOwner(PlanetToStar(IdToPlanet(GetData()))) == 1) {",
              "    for(t=0;StarPlanets(ShipStar(CurShip));t=t+1) {",
              "        if(PlanetOwner(StarPlanets(ShipStar(CurShip),t)) == 6) continue;",
              "        t_plan = StarPlanets(ShipStar(CurShip),t);",
              "        break;",
              "    }",
              "    SetData(Id(t_plan),0,CurShip);",
              "}"          
          ]        
        }      
      ],
      "Planets":      
      [
        {
          "Type":  "TPlanet",
          "Name":  "PlanetNew",
          "Pos.x":  -100,
          "Pos.y":  -30,
          "Parent":  -1,
          "#":  1,
          "Race":  62,
          "Owner":  62,
          "Economy":  14,
          "Goverment":  62,
          "RangeMin":  0,
          "RangeMax":  100,
          "Dialog":  -1        
        }      
      ],
      "Ships":      
      [
        {
          "Type":  "TStarShip",
          "Name":  "",
          "Pos.x":  -100,
          "Pos.y":  -90,
          "Parent":  -1,
          "#":  2,
          "Count":  1,
          "Owner":  62,
          "Ship.Type":  126,
          "Player":  true,
          "SpeedMin":  0,
          "SpeedMax":  10000,
          "Weapon":  0,
          "CargoHook":  0,
          "EmptySpace":  0,
          "StatusTraderMin":  0,
          "StatusTraderMax":  100,
          "StatusWarriorMin":  0,
          "StatusWarriorMax":  100,
          "StatusPirateMin":  0,
          "StatusPirateMax":  100,
          "StrengthMin":  "0",
          "StrengthMax":  "0",
          "Ruins":  ""        
        }      
      ],
      "Stars":      
      [
        {
          "Type":  "TStar",
          "Name":  "StarNew",
          "Pos.x":  -100,
          "Pos.y":  -60,
          "Parent":  -1,
          "#":  0,
          "Constellation":  0,
          "Priority":  0,
          "NoKling":  false,
          "NoComeKling":  false        
        }      
      ],
      "States":      
      [
        {
          "Type":  "TState",
          "Name":  "StateNew",
          "Pos.x":  -100,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  3,
          "Move":  0,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        },
        {
          "Type":  "TState",
          "Name":  "StateMain",
          "Pos.x":  20,
          "Pos.y":  30,
          "Parent":  -1,
          "#":  9,
          "Move":  5,
          "MoveObj":  -1,
          "Attack.Count":  0,
          "TakeItem":  -1,
          "TakeAllItem":  false,
          "OnTalk":  "",
          "OnActCode":  "",
          "EType":  1,
          "EUnique":  "",
          "EMsg":  ""        
        }      
      ],
      "Variables":      
      [
        {
          "Type":  "TVar",
          "Name":  "t_star",
          "Pos.x":  -90,
          "Pos.y":  -240,
          "Parent":  -1,
          "#":  11,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "t",
          "Pos.x":  -90,
          "Pos.y":  -280,
          "Parent":  -1,
          "#":  12,
          "Var.Type":  "Int",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "t_ship",
          "Pos.x":  -90,
          "Pos.y":  -220,
          "Parent":  -1,
          "#":  13,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        },
        {
          "Type":  "TVar",
          "Name":  "t_plan",
          "Pos.x":  -90,
          "Pos.y":  -260,
          "Parent":  -1,
          "#":  14,
          "Var.Type":  "Dword",
          "Init":  "",
          "Global":  false        
        }      
      ]    
    }  
  ],
  "Visual.Links":  
  [
    {
      "Type":  "TGraphLink",
      "Begin":  2,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  1,
      "End":  0,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  4,
      "End":  3,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  1,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  8,
      "End":  9,
      "Nom":  0,
      "Arrow":  true    
    },
    {
      "Type":  "TGraphLink",
      "Begin":  9,
      "End":  10,
      "Nom":  0,
      "Arrow":  true    
    }  
  ],
  "BlockPar.EC.Total.Strings":  0,
  "BlockPar.EC":  
  [
  
  ]
}